package pojos;
// Generated Jun 2, 2016 7:43:06 PM by Hibernate Tools 4.3.1

import com.google.gson.annotations.Expose;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "itiproject"
)
public class Category implements java.io.Serializable {

    @Expose
    private Integer categoryId;
    @Expose
    private String categoryName;
    @Expose
    private String imageOfCategoryUrl;
    private Set<Tags> tagses = new HashSet<Tags>(0);
    private Set<Portofolioforuser> portofolioforusers = new HashSet<Portofolioforuser>(0);
    private Set<Projectsforusers> projectsforuserses = new HashSet<Projectsforusers>(0);

    public Category() {
    }

    public Category(String categoryName, String imageOfCategoryUrl) {
        this.categoryName = categoryName;
        this.imageOfCategoryUrl = imageOfCategoryUrl;
    }

    public Category(String categoryName, String imageOfCategoryUrl, Set<Tags> tagses, Set<Portofolioforuser> portofolioforusers, Set<Projectsforusers> projectsforuserses) {
        this.categoryName = categoryName;
        this.imageOfCategoryUrl = imageOfCategoryUrl;
        this.tagses = tagses;
        this.portofolioforusers = portofolioforusers;
        this.projectsforuserses = projectsforuserses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "categoryId", unique = true, nullable = false)
    public Integer getCategoryId() {
        return this.categoryId;
    }

    public void setCategoryId(Integer categoryId) {
        this.categoryId = categoryId;
    }

    @Column(name = "categoryName", nullable = false, length = 100)
    public String getCategoryName() {
        return this.categoryName;
    }

    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }

    @Column(name = "imageOfCategoryURL", nullable = false, length = 100)
    public String getImageOfCategoryUrl() {
        return this.imageOfCategoryUrl;
    }

    public void setImageOfCategoryUrl(String imageOfCategoryUrl) {
        this.imageOfCategoryUrl = imageOfCategoryUrl;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
    public Set<Tags> getTagses() {
        return this.tagses;
    }

    public void setTagses(Set<Tags> tagses) {
        this.tagses = tagses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
    public Set<Portofolioforuser> getPortofolioforusers() {
        return this.portofolioforusers;
    }

    public void setPortofolioforusers(Set<Portofolioforuser> portofolioforusers) {
        this.portofolioforusers = portofolioforusers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
    public Set<Projectsforusers> getProjectsforuserses() {
        return this.projectsforuserses;
    }

    public void setProjectsforuserses(Set<Projectsforusers> projectsforuserses) {
        this.projectsforuserses = projectsforuserses;
    }

}

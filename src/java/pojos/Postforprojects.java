package pojos;
// Generated Jun 2, 2016 7:43:06 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Postforprojects generated by hbm2java
 */
@Entity
@Table(name = "postforprojects", catalog = "itiproject"
)
public class Postforprojects implements java.io.Serializable {

    private Integer qid;
    private Projectsforusers projectsforusers;
    private Users users;
    private String post;
    private Set<Comments> commentses = new HashSet<Comments>(0);

    public Postforprojects() {
    }

    public Postforprojects(Projectsforusers projectsforusers, Users users, String post) {
        this.projectsforusers = projectsforusers;
        this.users = users;
        this.post = post;
    }

    public Postforprojects(Projectsforusers projectsforusers, Users users, String post, Set<Comments> commentses) {
        this.projectsforusers = projectsforusers;
        this.users = users;
        this.post = post;
        this.commentses = commentses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "qId", unique = true, nullable = false)
    public Integer getQid() {
        return this.qid;
    }

    public void setQid(Integer qid) {
        this.qid = qid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "projectId", nullable = false)
    public Projectsforusers getProjectsforusers() {
        return this.projectsforusers;
    }

    public void setProjectsforusers(Projectsforusers projectsforusers) {
        this.projectsforusers = projectsforusers;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "supliersIdForQuestion", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @Column(name = "post", nullable = false)
    public String getPost() {
        return this.post;
    }

    public void setPost(String post) {
        this.post = post;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "postforprojects")
    public Set<Comments> getCommentses() {
        return this.commentses;
    }

    public void setCommentses(Set<Comments> commentses) {
        this.commentses = commentses;
    }

}
